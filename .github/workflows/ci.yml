name: Build and Test Dose Response

on:
  push:
    branches: [ master, 1.1.x, 1.0.x ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ master, 1.1.x, 1.0.x ]
  schedule:
    - cron: '0 17 * * *'

jobs:
  build:
    name: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - os: ubuntu-22.04
          extra_features: linux-extra-features
          build_time_dependencies: |
            sudo apt-get update
            sudo apt-get install libasound2-dev libudev-dev libfontconfig-dev
        - os: windows-2025
          extra_features: windows-extra-features
          build_time_dependencies: ""
        # NOTE: `macos-latest` uses the Arm64 architecture:
        # https://github.com/actions/runner-images
        - os: macos-14
          extra_features: macos-extra-features
          build_time_dependencies: |
            brew install sdl2
            brew --prefix
            ls -alh "{brew --prefix}/lib"
        # NOTE: `macos-13` uses the x86/64 architecture:
        # https://github.com/actions/runner-images
        - os: macos-13
          extra_features: macos-extra-features
          build_time_dependencies: ""
    runs-on: ${{ matrix.platform.os }}

    env:
      BUCKET_NAME: "${{ secrets.AWS_S3_BUCKET_NAME }}"
      CARGO_TERM_COLOR: always
      EXTRA_FEATURES: "${{ matrix.platform.extra_features }}"
      RUST_BACKTRACE: "1"
      RUSTFLAGS: -D warnings
    steps:
    - name: Check out the Dose Response repo
      uses: actions/checkout@v4
    - name: Install build-time dependencies
      run: |
        ${{ matrix.platform.build_time_dependencies }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION_NAME }}
    - name: Install Rust Nightly
      run: "rustup install nightly"
    - name: Check, build and upload the release
      run: "make package-release"
